plugins {
    id 'java'
    id 'war'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    // spring-core, spring-context, spring-test , spring-webmvc
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-test', version: '5.3.27'
    implementation group: 'org.springframework', name: 'spring-webmvc', version: '5.3.27'


    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

    //log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.2'

    //jstl
    implementation group: 'jstl', name: 'jstl', version: '1.2'

    //mysql, hikaricp
    implementation 'mysql:mysql-connector-java:8.0.31'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

    //MyBatis
    implementation 'org.springframework:spring-tx:5.3.27'
    implementation 'org.springframework:spring-jdbc:5.3.19'

    implementation 'org.mybatis:mybatis:3.5.9'
    implementation 'org.mybatis:mybatis-spring:2.0.7'

    implementation 'org.modelmapper:modelmapper:3.0.0'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.1.Final'











    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}