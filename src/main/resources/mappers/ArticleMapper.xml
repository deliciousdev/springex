<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org.dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springex.mapper.ArticleMapper">

  <select id="getTime" resultType="string">
    select now()
  </select>

  <insert id="insert">
    insert into article (writer_id,title,content) values (1,#{title},#{content})
  </insert>

  <resultMap type="com.example.springex.domain.entity.Article" id="Article">
    <result column="aid" property="id"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="created_at" property="createdAt"/>
    <result column="updated_at" property="updatedAt"/>
    <collection property="user" resultMap="User"/>
  </resultMap>

  <resultMap type="com.example.springex.domain.entity.User" id="User">
    <result column="uid" property="id"/>
    <result column="username" property="username"/>
    <result column="password" property="password"/>
  </resultMap>

  <select id="selectById" parameterType="int" resultMap="Article">
    select a.aid, a.title, a.content, a.created_at , a.updated_at  , u.uid, u.username ,u.password
    from article a
    join user u
    on a.writer_id=u.uid
    where a.aid=#{id}
  </select>

  <select id="selectAll" resultMap="Article">
    select * from article a
    join user u
    on a.writer_id=u.uid
    order by a.created_at desc;
  </select>

  <delete id="deleteById" parameterType="int">
    delete from article where aid=#{id}
  </delete>
</mapper>